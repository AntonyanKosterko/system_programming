
# Disassemble ASM programm

(gdb) disassemble _start
Dump of assembler code for function _start:
   0x000000000000001b <+0>:     mov    $0x4,%rax
   0x0000000000000022 <+7>:     mov    $0x1,%rbx
   0x0000000000000029 <+14>:    movabs $0x0,%rcx
   0x0000000000000033 <+24>:    mov    $0x19,%rdx
   0x000000000000003a <+31>:    int    $0x80
   0x000000000000003c <+33>:    mov    $0x1,%rax
   0x0000000000000043 <+40>:    mov    $0x0,%rbx
   0x000000000000004a <+47>:    int    $0x80
End of assembler dump.


# Disassemble C programm
Dump of assembler code for function _start:
   0x0000000000001060 <+0>:     endbr64 
   0x0000000000001064 <+4>:     xor    %ebp,%ebp
   0x0000000000001066 <+6>:     mov    %rdx,%r9
   0x0000000000001069 <+9>:     pop    %rsi
   0x000000000000106a <+10>:    mov    %rsp,%rdx
   0x000000000000106d <+13>:    and    $0xfffffffffffffff0,%rsp
   0x0000000000001071 <+17>:    push   %rax
   0x0000000000001072 <+18>:    push   %rsp
   0x0000000000001073 <+19>:    lea    0x166(%rip),%r8        # 0x11e0 <__libc_csu_fini>
   0x000000000000107a <+26>:    lea    0xef(%rip),%rcx        # 0x1170 <__libc_csu_init>
   0x0000000000001081 <+33>:    lea    0xc1(%rip),%rdi        # 0x1149 <main>
   0x0000000000001088 <+40>:    callq  *0x2f52(%rip)        # 0x3fe0
   0x000000000000108e <+46>:    hlt    
--Type <RET> for more, q to quit, c to continue without paging--
End of assembler dump.
(gdb) disassemble main
Dump of assembler code for function main:
   0x0000000000001149 <+0>:     endbr64 
   0x000000000000114d <+4>:     push   %rbp
   0x000000000000114e <+5>:     mov    %rsp,%rbp
   0x0000000000001151 <+8>:     lea    0xeac(%rip),%rdi        # 0x2004
   0x0000000000001158 <+15>:    callq  0x1050 <puts@plt>
   0x000000000000115d <+20>:    mov    $0x0,%eax
   0x0000000000001162 <+25>:    pop    %rbp
   0x0000000000001163 <+26>:    retq   
End of assembler dump.